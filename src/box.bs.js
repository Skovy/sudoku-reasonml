// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

var Curry       = require("bs-platform/lib/js/curry.js");
var React       = require("react");
var Pervasives  = require("bs-platform/lib/js/pervasives.js");
var ReactDOMRe  = require("reason-react/src/ReactDOMRe.js");
var ReasonReact = require("reason-react/src/ReasonReact.js");

var component = ReasonReact.statelessComponent("Box");

var color = "#1E2D24";

var baseStyles = {
  background: "#fff",
  border: "1px solid #1E2D24",
  color: color,
  display: "flex",
  fontFamily: "'Rubik', sans-serif",
  fontSize: "32px",
  height: "64px",
  width: "64px",
  alignItems: "center",
  justifyContent: "center"
};

var providedStyles = ReactDOMRe.Style[/* combine */0](baseStyles, {
      fontWeight: "bold"
    });

var inputStyles = {
  background: "transparent",
  border: "0",
  color: "#0055CC",
  display: "block",
  fontFamily: "'Rubik', sans-serif",
  fontSize: "32px",
  height: "64px",
  lineHeight: "64px",
  padding: "0",
  textAlign: "center",
  width: "100%"
};

function make(value, $staropt$star, handleChange, row, column, _) {
  var provided = $staropt$star ? $staropt$star[0] : /* false */0;
  var onChange = function ($$event) {
    return Curry._3(handleChange, $$event.target.value, row, column);
  };
  var newrecord = component.slice();
  newrecord[/* render */9] = (function () {
      var tmp;
      if (provided !== 0) {
        tmp = Pervasives.string_of_int(value);
      } else {
        var match = +(value > 0);
        tmp = React.createElement("input", {
              style: inputStyles,
              value: match !== 0 ? Pervasives.string_of_int(value) : "",
              onChange: onChange
            });
      }
      return React.createElement("div", {
                  className: "box"
                }, React.createElement("div", {
                      style: provided !== 0 ? providedStyles : baseStyles
                    }, React.createElement("span", undefined, tmp)));
    });
  return newrecord;
}

exports.component      = component;
exports.color          = color;
exports.baseStyles     = baseStyles;
exports.providedStyles = providedStyles;
exports.inputStyles    = inputStyles;
exports.make           = make;
/* component Not a pure module */
